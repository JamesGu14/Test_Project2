package com.mybatis.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class StockKdjExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stockkdj
     *
     * @mbggenerated Sun Sep 17 15:15:42 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stockkdj
     *
     * @mbggenerated Sun Sep 17 15:15:42 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stockkdj
     *
     * @mbggenerated Sun Sep 17 15:15:42 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stockkdj
     *
     * @mbggenerated Sun Sep 17 15:15:42 CST 2017
     */
    public StockKdjExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stockkdj
     *
     * @mbggenerated Sun Sep 17 15:15:42 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stockkdj
     *
     * @mbggenerated Sun Sep 17 15:15:42 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stockkdj
     *
     * @mbggenerated Sun Sep 17 15:15:42 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stockkdj
     *
     * @mbggenerated Sun Sep 17 15:15:42 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stockkdj
     *
     * @mbggenerated Sun Sep 17 15:15:42 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stockkdj
     *
     * @mbggenerated Sun Sep 17 15:15:42 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stockkdj
     *
     * @mbggenerated Sun Sep 17 15:15:42 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stockkdj
     *
     * @mbggenerated Sun Sep 17 15:15:42 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stockkdj
     *
     * @mbggenerated Sun Sep 17 15:15:42 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stockkdj
     *
     * @mbggenerated Sun Sep 17 15:15:42 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stockkdj
     *
     * @mbggenerated Sun Sep 17 15:15:42 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andStockIdIsNull() {
            addCriterion("stock_id is null");
            return (Criteria) this;
        }

        public Criteria andStockIdIsNotNull() {
            addCriterion("stock_id is not null");
            return (Criteria) this;
        }

        public Criteria andStockIdEqualTo(Integer value) {
            addCriterion("stock_id =", value, "stockId");
            return (Criteria) this;
        }

        public Criteria andStockIdNotEqualTo(Integer value) {
            addCriterion("stock_id <>", value, "stockId");
            return (Criteria) this;
        }

        public Criteria andStockIdGreaterThan(Integer value) {
            addCriterion("stock_id >", value, "stockId");
            return (Criteria) this;
        }

        public Criteria andStockIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("stock_id >=", value, "stockId");
            return (Criteria) this;
        }

        public Criteria andStockIdLessThan(Integer value) {
            addCriterion("stock_id <", value, "stockId");
            return (Criteria) this;
        }

        public Criteria andStockIdLessThanOrEqualTo(Integer value) {
            addCriterion("stock_id <=", value, "stockId");
            return (Criteria) this;
        }

        public Criteria andStockIdIn(List<Integer> values) {
            addCriterion("stock_id in", values, "stockId");
            return (Criteria) this;
        }

        public Criteria andStockIdNotIn(List<Integer> values) {
            addCriterion("stock_id not in", values, "stockId");
            return (Criteria) this;
        }

        public Criteria andStockIdBetween(Integer value1, Integer value2) {
            addCriterion("stock_id between", value1, value2, "stockId");
            return (Criteria) this;
        }

        public Criteria andStockIdNotBetween(Integer value1, Integer value2) {
            addCriterion("stock_id not between", value1, value2, "stockId");
            return (Criteria) this;
        }

        public Criteria andStockDateIsNull() {
            addCriterion("stock_date is null");
            return (Criteria) this;
        }

        public Criteria andStockDateIsNotNull() {
            addCriterion("stock_date is not null");
            return (Criteria) this;
        }

        public Criteria andStockDateEqualTo(Date value) {
            addCriterionForJDBCDate("stock_date =", value, "stockDate");
            return (Criteria) this;
        }

        public Criteria andStockDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("stock_date <>", value, "stockDate");
            return (Criteria) this;
        }

        public Criteria andStockDateGreaterThan(Date value) {
            addCriterionForJDBCDate("stock_date >", value, "stockDate");
            return (Criteria) this;
        }

        public Criteria andStockDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("stock_date >=", value, "stockDate");
            return (Criteria) this;
        }

        public Criteria andStockDateLessThan(Date value) {
            addCriterionForJDBCDate("stock_date <", value, "stockDate");
            return (Criteria) this;
        }

        public Criteria andStockDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("stock_date <=", value, "stockDate");
            return (Criteria) this;
        }

        public Criteria andStockDateIn(List<Date> values) {
            addCriterionForJDBCDate("stock_date in", values, "stockDate");
            return (Criteria) this;
        }

        public Criteria andStockDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("stock_date not in", values, "stockDate");
            return (Criteria) this;
        }

        public Criteria andStockDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("stock_date between", value1, value2, "stockDate");
            return (Criteria) this;
        }

        public Criteria andStockDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("stock_date not between", value1, value2, "stockDate");
            return (Criteria) this;
        }

        public Criteria andKIsNull() {
            addCriterion("k is null");
            return (Criteria) this;
        }

        public Criteria andKIsNotNull() {
            addCriterion("k is not null");
            return (Criteria) this;
        }

        public Criteria andKEqualTo(Float value) {
            addCriterion("k =", value, "k");
            return (Criteria) this;
        }

        public Criteria andKNotEqualTo(Float value) {
            addCriterion("k <>", value, "k");
            return (Criteria) this;
        }

        public Criteria andKGreaterThan(Float value) {
            addCriterion("k >", value, "k");
            return (Criteria) this;
        }

        public Criteria andKGreaterThanOrEqualTo(Float value) {
            addCriterion("k >=", value, "k");
            return (Criteria) this;
        }

        public Criteria andKLessThan(Float value) {
            addCriterion("k <", value, "k");
            return (Criteria) this;
        }

        public Criteria andKLessThanOrEqualTo(Float value) {
            addCriterion("k <=", value, "k");
            return (Criteria) this;
        }

        public Criteria andKIn(List<Float> values) {
            addCriterion("k in", values, "k");
            return (Criteria) this;
        }

        public Criteria andKNotIn(List<Float> values) {
            addCriterion("k not in", values, "k");
            return (Criteria) this;
        }

        public Criteria andKBetween(Float value1, Float value2) {
            addCriterion("k between", value1, value2, "k");
            return (Criteria) this;
        }

        public Criteria andKNotBetween(Float value1, Float value2) {
            addCriterion("k not between", value1, value2, "k");
            return (Criteria) this;
        }

        public Criteria andDIsNull() {
            addCriterion("d is null");
            return (Criteria) this;
        }

        public Criteria andDIsNotNull() {
            addCriterion("d is not null");
            return (Criteria) this;
        }

        public Criteria andDEqualTo(Float value) {
            addCriterion("d =", value, "d");
            return (Criteria) this;
        }

        public Criteria andDNotEqualTo(Float value) {
            addCriterion("d <>", value, "d");
            return (Criteria) this;
        }

        public Criteria andDGreaterThan(Float value) {
            addCriterion("d >", value, "d");
            return (Criteria) this;
        }

        public Criteria andDGreaterThanOrEqualTo(Float value) {
            addCriterion("d >=", value, "d");
            return (Criteria) this;
        }

        public Criteria andDLessThan(Float value) {
            addCriterion("d <", value, "d");
            return (Criteria) this;
        }

        public Criteria andDLessThanOrEqualTo(Float value) {
            addCriterion("d <=", value, "d");
            return (Criteria) this;
        }

        public Criteria andDIn(List<Float> values) {
            addCriterion("d in", values, "d");
            return (Criteria) this;
        }

        public Criteria andDNotIn(List<Float> values) {
            addCriterion("d not in", values, "d");
            return (Criteria) this;
        }

        public Criteria andDBetween(Float value1, Float value2) {
            addCriterion("d between", value1, value2, "d");
            return (Criteria) this;
        }

        public Criteria andDNotBetween(Float value1, Float value2) {
            addCriterion("d not between", value1, value2, "d");
            return (Criteria) this;
        }

        public Criteria andJIsNull() {
            addCriterion("j is null");
            return (Criteria) this;
        }

        public Criteria andJIsNotNull() {
            addCriterion("j is not null");
            return (Criteria) this;
        }

        public Criteria andJEqualTo(Float value) {
            addCriterion("j =", value, "j");
            return (Criteria) this;
        }

        public Criteria andJNotEqualTo(Float value) {
            addCriterion("j <>", value, "j");
            return (Criteria) this;
        }

        public Criteria andJGreaterThan(Float value) {
            addCriterion("j >", value, "j");
            return (Criteria) this;
        }

        public Criteria andJGreaterThanOrEqualTo(Float value) {
            addCriterion("j >=", value, "j");
            return (Criteria) this;
        }

        public Criteria andJLessThan(Float value) {
            addCriterion("j <", value, "j");
            return (Criteria) this;
        }

        public Criteria andJLessThanOrEqualTo(Float value) {
            addCriterion("j <=", value, "j");
            return (Criteria) this;
        }

        public Criteria andJIn(List<Float> values) {
            addCriterion("j in", values, "j");
            return (Criteria) this;
        }

        public Criteria andJNotIn(List<Float> values) {
            addCriterion("j not in", values, "j");
            return (Criteria) this;
        }

        public Criteria andJBetween(Float value1, Float value2) {
            addCriterion("j between", value1, value2, "j");
            return (Criteria) this;
        }

        public Criteria andJNotBetween(Float value1, Float value2) {
            addCriterion("j not between", value1, value2, "j");
            return (Criteria) this;
        }

        public Criteria andRsvIsNull() {
            addCriterion("rsv is null");
            return (Criteria) this;
        }

        public Criteria andRsvIsNotNull() {
            addCriterion("rsv is not null");
            return (Criteria) this;
        }

        public Criteria andRsvEqualTo(Float value) {
            addCriterion("rsv =", value, "rsv");
            return (Criteria) this;
        }

        public Criteria andRsvNotEqualTo(Float value) {
            addCriterion("rsv <>", value, "rsv");
            return (Criteria) this;
        }

        public Criteria andRsvGreaterThan(Float value) {
            addCriterion("rsv >", value, "rsv");
            return (Criteria) this;
        }

        public Criteria andRsvGreaterThanOrEqualTo(Float value) {
            addCriterion("rsv >=", value, "rsv");
            return (Criteria) this;
        }

        public Criteria andRsvLessThan(Float value) {
            addCriterion("rsv <", value, "rsv");
            return (Criteria) this;
        }

        public Criteria andRsvLessThanOrEqualTo(Float value) {
            addCriterion("rsv <=", value, "rsv");
            return (Criteria) this;
        }

        public Criteria andRsvIn(List<Float> values) {
            addCriterion("rsv in", values, "rsv");
            return (Criteria) this;
        }

        public Criteria andRsvNotIn(List<Float> values) {
            addCriterion("rsv not in", values, "rsv");
            return (Criteria) this;
        }

        public Criteria andRsvBetween(Float value1, Float value2) {
            addCriterion("rsv between", value1, value2, "rsv");
            return (Criteria) this;
        }

        public Criteria andRsvNotBetween(Float value1, Float value2) {
            addCriterion("rsv not between", value1, value2, "rsv");
            return (Criteria) this;
        }

        public Criteria andStockHistoryIdIsNull() {
            addCriterion("stock_history_id is null");
            return (Criteria) this;
        }

        public Criteria andStockHistoryIdIsNotNull() {
            addCriterion("stock_history_id is not null");
            return (Criteria) this;
        }

        public Criteria andStockHistoryIdEqualTo(Integer value) {
            addCriterion("stock_history_id =", value, "stockHistoryId");
            return (Criteria) this;
        }

        public Criteria andStockHistoryIdNotEqualTo(Integer value) {
            addCriterion("stock_history_id <>", value, "stockHistoryId");
            return (Criteria) this;
        }

        public Criteria andStockHistoryIdGreaterThan(Integer value) {
            addCriterion("stock_history_id >", value, "stockHistoryId");
            return (Criteria) this;
        }

        public Criteria andStockHistoryIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("stock_history_id >=", value, "stockHistoryId");
            return (Criteria) this;
        }

        public Criteria andStockHistoryIdLessThan(Integer value) {
            addCriterion("stock_history_id <", value, "stockHistoryId");
            return (Criteria) this;
        }

        public Criteria andStockHistoryIdLessThanOrEqualTo(Integer value) {
            addCriterion("stock_history_id <=", value, "stockHistoryId");
            return (Criteria) this;
        }

        public Criteria andStockHistoryIdIn(List<Integer> values) {
            addCriterion("stock_history_id in", values, "stockHistoryId");
            return (Criteria) this;
        }

        public Criteria andStockHistoryIdNotIn(List<Integer> values) {
            addCriterion("stock_history_id not in", values, "stockHistoryId");
            return (Criteria) this;
        }

        public Criteria andStockHistoryIdBetween(Integer value1, Integer value2) {
            addCriterion("stock_history_id between", value1, value2, "stockHistoryId");
            return (Criteria) this;
        }

        public Criteria andStockHistoryIdNotBetween(Integer value1, Integer value2) {
            addCriterion("stock_history_id not between", value1, value2, "stockHistoryId");
            return (Criteria) this;
        }

        public Criteria andTradingDateIsNull() {
            addCriterion("trading_date is null");
            return (Criteria) this;
        }

        public Criteria andTradingDateIsNotNull() {
            addCriterion("trading_date is not null");
            return (Criteria) this;
        }

        public Criteria andTradingDateEqualTo(Integer value) {
            addCriterion("trading_date =", value, "tradingDate");
            return (Criteria) this;
        }

        public Criteria andTradingDateNotEqualTo(Integer value) {
            addCriterion("trading_date <>", value, "tradingDate");
            return (Criteria) this;
        }

        public Criteria andTradingDateGreaterThan(Integer value) {
            addCriterion("trading_date >", value, "tradingDate");
            return (Criteria) this;
        }

        public Criteria andTradingDateGreaterThanOrEqualTo(Integer value) {
            addCriterion("trading_date >=", value, "tradingDate");
            return (Criteria) this;
        }

        public Criteria andTradingDateLessThan(Integer value) {
            addCriterion("trading_date <", value, "tradingDate");
            return (Criteria) this;
        }

        public Criteria andTradingDateLessThanOrEqualTo(Integer value) {
            addCriterion("trading_date <=", value, "tradingDate");
            return (Criteria) this;
        }

        public Criteria andTradingDateIn(List<Integer> values) {
            addCriterion("trading_date in", values, "tradingDate");
            return (Criteria) this;
        }

        public Criteria andTradingDateNotIn(List<Integer> values) {
            addCriterion("trading_date not in", values, "tradingDate");
            return (Criteria) this;
        }

        public Criteria andTradingDateBetween(Integer value1, Integer value2) {
            addCriterion("trading_date between", value1, value2, "tradingDate");
            return (Criteria) this;
        }

        public Criteria andTradingDateNotBetween(Integer value1, Integer value2) {
            addCriterion("trading_date not between", value1, value2, "tradingDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stockkdj
     *
     * @mbggenerated do_not_delete_during_merge Sun Sep 17 15:15:42 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stockkdj
     *
     * @mbggenerated Sun Sep 17 15:15:42 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}